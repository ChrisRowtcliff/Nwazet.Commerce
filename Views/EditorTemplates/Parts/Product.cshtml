@using Nwazet.Commerce.Models
@using Orchard.ContentManagement
@model Nwazet.Commerce.Models.ProductPart
<fieldset>
    <label class="sub" for="Sku">@T("Sku")</label><br />
    @Html.TextBoxFor(m => m.Sku, new { @class = "text" })<br />
    <label class="sub" for="Price">@T("Price")</label><br />
    @Html.TextBoxFor(m => m.Price, new { @class = "text" })
</fieldset>
<fieldset>
    <label class="sub" for="Inventory">@T("Inventory")</label>
    @if (Model.Has<BundlePart>()) {
        <text>: @Model.Inventory</text>
    }
    else {
        <br />@Html.TextBoxFor(m => m.Inventory, new { @class = "text" })
    }<br />
    <label class="sub" for="OutOfStockMessage">@T("Out of stock message")</label><br />
    @Html.TextBoxFor(m => m.OutOfStockMessage, new { @class = "textMedium" })<br />
    <span class="hint">@T("This message will be displayed if the inventory is zero or less. Leave blank for the default message to be used.")</span>
    @Html.CheckBoxFor(m => m.AllowBackOrder)
    <label class="sub" for="AllowBackOrder">@T("allow back order")</label><br />
    <span class="hint">@T("If unchecked, the add button won't be visible on the product page when the inventory is zero or less.")</span>
</fieldset>
<fieldset>
    <label class="sub" for="Weight">@T("Weight")</label><br />
    @Html.TextBoxFor(m => m.Weight, new { @class = "text" })<br />
    <label class="sub" for="ShippingCost">@T("Shipping Cost")</label><br />
    @Html.TextBoxFor(m => m.ShippingCost, new { @class = "text" })<br />
    <span class="hint">@T("Specify a shipping cost if you want the shipping cost to be fixed. Otherwise, leave this empty and only specify the weight. The shipping will be computed based on the shipping provider that the customer will pick.")</span>
</fieldset>
<fieldset>
    @Html.CheckBoxFor(m => m.IsDigital)
    <label class="sub" for="IsDigital">@T("digital product")</label>
</fieldset>